version: '3.8'

services:
  # PostgreSQL Database
  postgresql:
    image: postgres:15-alpine
    container_name: plant-monitoring-db-dev
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=plant_monitoring
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./postgredb.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./ai-service/database/ai-schema-migration.sql:/docker-entrypoint-initdb.d/02-ai-schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d plant_monitoring"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: plant-monitoring-redis-dev
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_dev_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  # MQTT Broker
  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: plant-monitoring-mqtt-dev
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mqtt/mosquitto-dev.conf:/mosquitto/config/mosquitto.conf
      - mosquitto_dev_data:/mosquitto/data
      - mosquitto_dev_logs:/mosquitto/log
    healthcheck:
      test: ["CMD-SHELL", "mosquitto_pub -h localhost -t test -m 'health check' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Optional: Adminer for database management
  adminer:
    image: adminer:latest
    container_name: plant-monitoring-adminer-dev
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgresql
    depends_on:
      - postgresql
    restart: unless-stopped

  # Optional: Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: plant-monitoring-redis-commander-dev
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    restart: unless-stopped

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  mosquitto_dev_data:
    driver: local
  mosquitto_dev_logs:
    driver: local

networks:
  default:
    name: plant-monitoring-dev
    driver: bridge