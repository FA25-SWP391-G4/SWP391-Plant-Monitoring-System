{"ast":null,"code":"// src/api/authApi.js\nimport axiosClient from \"./axiosClient\";\nconst googleLogin = token => axiosClient.post(\"http://localhost:3010/auth/google\", {\n  token\n});\nconst authApi = {\n  login: (email, password) => axiosClient.post(\"/auth/login\", {\n    email,\n    password\n  }),\n  register: (fullName, email, password) => axiosClient.post(\"/auth/register\", {\n    full_name: fullName,\n    email,\n    password\n  }),\n  changePassword: payload => axiosClient.put(\"/auth/change-password\", payload),\n  forgotPassword: email => axiosClient.post(\"/auth/forgot-password\", {\n    email\n  }),\n  resetPassword: (token, newPassword) => axiosClient.post(\"/auth/reset-password\", {\n    token,\n    newPassword\n  }),\n  // For Google login when backend is ready\n  loginWithGoogle: token => googleLogin(token)\n};\nexport default authApi;","map":{"version":3,"names":["axiosClient","googleLogin","token","post","authApi","login","email","password","register","fullName","full_name","changePassword","payload","put","forgotPassword","resetPassword","newPassword","loginWithGoogle"],"sources":["C:/Users/Admin/Downloads/SWP391/SWP391-Plant-Monitoring-System/plant-system/client/src/api/authApi.js"],"sourcesContent":["// src/api/authApi.js\r\nimport axiosClient from \"./axiosClient\";\r\n\r\n\r\nconst googleLogin = (token) => axiosClient.post(\"http://localhost:3010/auth/google\", { token });\r\n\r\n\r\nconst authApi = {\r\n  login: (email, password) =>\r\n    axiosClient.post(\"/auth/login\", { email, password }),\r\n\r\n  register: (fullName, email, password) =>\r\n    axiosClient.post(\"/auth/register\", {\r\n      full_name: fullName, \r\n      email,\r\n      password,\r\n    }),\r\n  changePassword: (payload) =>\r\n    axiosClient.put(\"/auth/change-password\", payload),\r\n\r\n  forgotPassword: (email) =>\r\n    axiosClient.post(\"/auth/forgot-password\", { email }),\r\n\r\n  resetPassword: (token, newPassword) =>\r\n    axiosClient.post(\"/auth/reset-password\", { token, newPassword }),\r\n\r\n  // For Google login when backend is ready\r\n  loginWithGoogle: (token) => googleLogin(token),\r\n};\r\n\r\nexport default authApi;\r\n"],"mappings":"AAAA;AACA,OAAOA,WAAW,MAAM,eAAe;AAGvC,MAAMC,WAAW,GAAIC,KAAK,IAAKF,WAAW,CAACG,IAAI,CAAC,mCAAmC,EAAE;EAAED;AAAM,CAAC,CAAC;AAG/F,MAAME,OAAO,GAAG;EACdC,KAAK,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KACrBP,WAAW,CAACG,IAAI,CAAC,aAAa,EAAE;IAAEG,KAAK;IAAEC;EAAS,CAAC,CAAC;EAEtDC,QAAQ,EAAEA,CAACC,QAAQ,EAAEH,KAAK,EAAEC,QAAQ,KAClCP,WAAW,CAACG,IAAI,CAAC,gBAAgB,EAAE;IACjCO,SAAS,EAAED,QAAQ;IACnBH,KAAK;IACLC;EACF,CAAC,CAAC;EACJI,cAAc,EAAGC,OAAO,IACtBZ,WAAW,CAACa,GAAG,CAAC,uBAAuB,EAAED,OAAO,CAAC;EAEnDE,cAAc,EAAGR,KAAK,IACpBN,WAAW,CAACG,IAAI,CAAC,uBAAuB,EAAE;IAAEG;EAAM,CAAC,CAAC;EAEtDS,aAAa,EAAEA,CAACb,KAAK,EAAEc,WAAW,KAChChB,WAAW,CAACG,IAAI,CAAC,sBAAsB,EAAE;IAAED,KAAK;IAAEc;EAAY,CAAC,CAAC;EAElE;EACAC,eAAe,EAAGf,KAAK,IAAKD,WAAW,CAACC,KAAK;AAC/C,CAAC;AAED,eAAeE,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}