{"ast":null,"code":"import{createContext,useContext,useEffect,useMemo,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(null);export const useAuth=()=>useContext(AuthContext);export default function AuthProvider(_ref){let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const t=localStorage.getItem(\"token\");const u=localStorage.getItem(\"user\");if(t&&u){setToken(t);try{setUser(JSON.parse(u));}catch(_unused){}}setLoading(false);},[]);const login=(t,u)=>{localStorage.setItem(\"token\",t);localStorage.setItem(\"user\",JSON.stringify(u));setToken(t);setUser(u);};const logout=()=>{localStorage.removeItem(\"token\");localStorage.removeItem(\"user\");setToken(null);setUser(null);};const value=useMemo(()=>({user,token,login,logout,loading}),[user,token,loading]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});}","map":{"version":3,"names":["createContext","useContext","useEffect","useMemo","useState","jsx","_jsx","AuthContext","useAuth","AuthProvider","_ref","children","user","setUser","token","setToken","loading","setLoading","t","localStorage","getItem","u","JSON","parse","_unused","login","setItem","stringify","logout","removeItem","value","Provider"],"sources":["C:/Users/Admin/Downloads/SWP391/SWP391-Plant-Monitoring-System/plant-system/client/src/auth/AuthContext.jsx"],"sourcesContent":["import { createContext, useContext, useEffect, useMemo, useState } from \"react\";\r\n\r\nconst AuthContext = createContext(null);\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport default function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const t = localStorage.getItem(\"token\");\r\n    const u = localStorage.getItem(\"user\");\r\n    if (t && u) { setToken(t); try { setUser(JSON.parse(u)); } catch {} }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = (t, u) => { localStorage.setItem(\"token\", t); localStorage.setItem(\"user\", JSON.stringify(u)); setToken(t); setUser(u); };\r\n  const logout = () => { localStorage.removeItem(\"token\"); localStorage.removeItem(\"user\"); setToken(null); setUser(null); };\r\n\r\n  const value = useMemo(() => ({ user, token, login, logout, loading }), [user, token, loading]);\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\n"],"mappings":"AAAA,OAASA,aAAa,CAAEC,UAAU,CAAEC,SAAS,CAAEC,OAAO,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEhF,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,IAAI,CAAC,CACvC,MAAO,MAAM,CAAAQ,OAAO,CAAGA,CAAA,GAAMP,UAAU,CAACM,WAAW,CAAC,CAEpD,cAAe,SAAS,CAAAE,YAAYA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC/C,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACU,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACY,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAE5CF,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgB,CAAC,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACvC,KAAM,CAAAC,CAAC,CAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CACtC,GAAIF,CAAC,EAAIG,CAAC,CAAE,CAAEN,QAAQ,CAACG,CAAC,CAAC,CAAE,GAAI,CAAEL,OAAO,CAACS,IAAI,CAACC,KAAK,CAACF,CAAC,CAAC,CAAC,CAAE,CAAE,MAAAG,OAAA,CAAM,CAAC,CAAE,CACpEP,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAQ,KAAK,CAAGA,CAACP,CAAC,CAAEG,CAAC,GAAK,CAAEF,YAAY,CAACO,OAAO,CAAC,OAAO,CAAER,CAAC,CAAC,CAAEC,YAAY,CAACO,OAAO,CAAC,MAAM,CAAEJ,IAAI,CAACK,SAAS,CAACN,CAAC,CAAC,CAAC,CAAEN,QAAQ,CAACG,CAAC,CAAC,CAAEL,OAAO,CAACQ,CAAC,CAAC,CAAE,CAAC,CACvI,KAAM,CAAAO,MAAM,CAAGA,CAAA,GAAM,CAAET,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC,CAAEV,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC,CAAEd,QAAQ,CAAC,IAAI,CAAC,CAAEF,OAAO,CAAC,IAAI,CAAC,CAAE,CAAC,CAE1H,KAAM,CAAAiB,KAAK,CAAG3B,OAAO,CAAC,KAAO,CAAES,IAAI,CAAEE,KAAK,CAAEW,KAAK,CAAEG,MAAM,CAAEZ,OAAQ,CAAC,CAAC,CAAE,CAACJ,IAAI,CAAEE,KAAK,CAAEE,OAAO,CAAC,CAAC,CAC9F,mBAAOV,IAAA,CAACC,WAAW,CAACwB,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAnB,QAAA,CAAEA,QAAQ,CAAuB,CAAC,CAC9E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}