'use client';

import React, { useState, useEffect } from 'react';
import { useSearchParams } from 'next/navigation';
import DiseaseDetectionUI from '../../components/AIImageRecognition';
import MainLayout from '../../components/MainLayout';
import { 
  Container, 
  Typography, 
  Box, 
  Breadcrumbs, 
  Link,
  Alert,
  Card,
  CardContent,
  Grid,
  Chip
} from '@mui/material';
import {
  Home as HomeIcon,
  BugReport as BugReportIcon,
  Eco as EcoIcon
} from '@mui/icons-material';

const DiseaseDetectionPage = () => {
  const searchParams = useSearchParams();
  const plantId = searchParams.get('plantId');
  const plantName = searchParams.get('plantName');
  const [user, setUser] = useState(null);

  useEffect(() => {
    // Get user info from localStorage or context
    const userData = localStorage.getItem('user');
    if (userData) {
      setUser(JSON.parse(userData));
    }
  }, []);

  return (
    <MainLayout>
      <Container maxWidth="lg" sx={{ py: 4 }}>
        {/* Breadcrumbs */}
        <Breadcrumbs sx={{ mb: 3 }}>
          <Link 
            href="/dashboard" 
            sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}
          >
            <HomeIcon fontSize="small" />
            Dashboard
          </Link>
          {plantId && (
            <Link 
              href={`/plant-detail/${plantId}`}
              sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}
            >
              <EcoIcon fontSize="small" />
              {plantName || `C√¢y #${plantId}`}
            </Link>
          )}
          <Typography 
            color="text.primary"
            sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}
          >
            <BugReportIcon fontSize="small" />
            Nh·∫≠n di·ªán B·ªánh c√¢y
          </Typography>
        </Breadcrumbs>

        {/* Page Header */}
        <Box sx={{ mb: 4 }}>
          <Typography variant="h4" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>
            <BugReportIcon color="primary" sx={{ fontSize: 40 }} />
            Nh·∫≠n di·ªán B·ªánh c√¢y AI
          </Typography>
          <Typography variant="subtitle1" color="text.secondary">
            S·ª≠ d·ª•ng tr√≠ tu·ªá nh√¢n t·∫°o ƒë·ªÉ ph√°t hi·ªán b·ªánh c√¢y qua h√¨nh ·∫£nh v√† nh·∫≠n ƒë∆∞·ª£c h∆∞·ªõng d·∫´n ƒëi·ªÅu tr·ªã
          </Typography>
          
          {plantId && plantName && (
            <Box sx={{ mt: 2 }}>
              <Chip 
                icon={<EcoIcon />}
                label={`ƒêang ph√¢n t√≠ch cho: ${plantName}`}
                color="primary"
                variant="outlined"
              />
            </Box>
          )}
        </Box>

        {/* Info Cards */}
        <Grid container spacing={3} sx={{ mb: 4 }}>
          <Grid item xs={12} md={4}>
            <Card>
              <CardContent>
                <Typography variant="h6" gutterBottom color="primary">
                  üîç Ph√°t hi·ªán ch√≠nh x√°c
                </Typography>
                <Typography variant="body2">
                  AI ƒë∆∞·ª£c hu·∫•n luy·ªán tr√™n h√†ng ngh√¨n ·∫£nh b·ªánh c√¢y, ƒë·∫°t ƒë·ªô ch√≠nh x√°c cao trong vi·ªác nh·∫≠n di·ªán c√°c b·ªánh ph·ªï bi·∫øn.
                </Typography>
              </CardContent>
            </Card>
          </Grid>
          <Grid item xs={12} md={4}>
            <Card>
              <CardContent>
                <Typography variant="h6" gutterBottom color="success.main">
                  üíä H∆∞·ªõng d·∫´n ƒëi·ªÅu tr·ªã
                </Typography>
                <Typography variant="body2">
                  Nh·∫≠n ƒë∆∞·ª£c ph∆∞∆°ng ph√°p ƒëi·ªÅu tr·ªã c·ª• th·ªÉ v√† bi·ªán ph√°p ph√≤ng ng·ª´a cho t·ª´ng lo·∫°i b·ªánh ƒë∆∞·ª£c ph√°t hi·ªán.
                </Typography>
              </CardContent>
            </Card>
          </Grid>
          <Grid item xs={12} md={4}>
            <Card>
              <CardContent>
                <Typography variant="h6" gutterBottom color="info.main">
                  üìä Theo d√µi l·ªãch s·ª≠
                </Typography>
                <Typography variant="body2">
                  L∆∞u tr·ªØ v√† theo d√µi l·ªãch s·ª≠ ph√¢n t√≠ch ƒë·ªÉ theo d√µi t√¨nh tr·∫°ng s·ª©c kh·ªèe c√¢y tr·ªìng theo th·ªùi gian.
                </Typography>
              </CardContent>
            </Card>
          </Grid>
        </Grid>

        {/* Usage Instructions */}
        <Alert severity="info" sx={{ mb: 4 }}>
          <Typography variant="subtitle2" gutterBottom>
            H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng:
          </Typography>
          <Typography variant="body2" component="div">
            1. Ch·ª•p ·∫£nh l√° c√¢y r√µ n√©t, t·∫≠p trung v√†o v√πng c√≥ d·∫•u hi·ªáu b·ªánh<br/>
            2. ƒê·∫£m b·∫£o √°nh s√°ng ƒë·∫ßy ƒë·ªß v√† ·∫£nh kh√¥ng b·ªã m·ªù<br/>
            3. T·∫£i ·∫£nh l√™n b·∫±ng c√°ch k√©o th·∫£ ho·∫∑c click ch·ªçn file<br/>
            4. Ch·ªù AI ph√¢n t√≠ch v√† xem k·∫øt qu·∫£ c√πng h∆∞·ªõng d·∫´n ƒëi·ªÅu tr·ªã<br/>
            5. ƒê√°nh gi√° k·∫øt qu·∫£ ƒë·ªÉ gi√∫p c·∫£i thi·ªán ƒë·ªô ch√≠nh x√°c c·ªßa h·ªá th·ªëng
          </Typography>
        </Alert>

        {/* Main Disease Detection Component */}
        <DiseaseDetectionUI 
          plantId={plantId ? parseInt(plantId) : null}
          userId={user?.id || null}
        />

        {/* Additional Information */}
        <Card sx={{ mt: 4 }}>
          <CardContent>
            <Typography variant="h6" gutterBottom>
              C√°c b·ªánh ƒë∆∞·ª£c h·ªó tr·ª£
            </Typography>
            <Grid container spacing={1}>
              {[
                'ƒê·ªëm l√°',
                'Ph·∫•n tr·∫Øng', 
                'B·ªánh g·ªâ s·∫Øt',
                'Ch√°y l√° do vi khu·∫©n',
                'B·ªánh kh·∫£m virus',
                'Thi·∫øu dinh d∆∞·ª°ng',
                'S√¢u h·∫°i',
                'C√¢y kh·ªèe m·∫°nh'
              ].map((disease, index) => (
                <Grid item key={index}>
                  <Chip 
                    label={disease} 
                    variant="outlined" 
                    size="small"
                  />
                </Grid>
              ))}
            </Grid>
            <Typography variant="body2" color="text.secondary" sx={{ mt: 2 }}>
              H·ªá th·ªëng s·∫Ω ti·∫øp t·ª•c ƒë∆∞·ª£c c·∫≠p nh·∫≠t ƒë·ªÉ h·ªó tr·ª£ th√™m nhi·ªÅu lo·∫°i b·ªánh kh√°c.
            </Typography>
          </CardContent>
        </Card>
      </Container>
    </MainLayout>
  );
};

export default DiseaseDetectionPage;